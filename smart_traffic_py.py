# -*- coding: utf-8 -*-
"""smart_traffic.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TU1LRoCohWSX9FwKs1xxY6CEbHqtTn-8
"""

!pip install streamlit pyngrok pandas numpy scikit-learn matplotlib seaborn

!ngrok config add-authtoken "auth token"

import pandas as pd
import numpy as np
import streamlit as st
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor

# Generate Sample Traffic Data
np.random.seed(42)
num_samples = 1000
data = {
    "Time_of_Day": np.random.randint(0, 24, num_samples),
    "Day_of_Week": np.random.randint(0, 7, num_samples),
    "Weather_Condition": np.random.choice(["Clear", "Rain", "Fog", "Storm"], num_samples),
    "Accidents": np.random.randint(0, 5, num_samples),
    "Road_Closures": np.random.randint(0, 3, num_samples),
    "Special_Events": np.random.randint(0, 2, num_samples),
    "Traffic_Density": np.random.randint(10, 100, num_samples)
}

df = pd.DataFrame(data)

df = pd.get_dummies(df, columns=["Weather_Condition"], drop_first=True)

# Train Model
X = df.drop(columns=["Traffic_Density"])
y = df["Traffic_Density"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Streamlit App
def main():
    st.title("🚦 Smart Traffic Prediction System")
    time_of_day = st.slider("⏰ Time of Day", 0, 23, 12)
    day_of_week = st.slider("📅 Day of Week", 0, 6, 3)
    accidents = st.slider("🚗 Accidents", 0, 5, 1)
    road_closures = st.slider("🚧 Road Closures", 0, 3, 1)
    special_events = st.radio("🎉 Special Events", [0, 1])
    weather = st.selectbox("🌦 Weather Condition", ["Clear", "Rain", "Fog", "Storm"])

    # Encode input
    weather_encoded = [1 if weather == cond else 0 for cond in ["Rain", "Fog", "Storm"]]
    input_data = [time_of_day, day_of_week, accidents, road_closures, special_events] + weather_encoded

    # Prediction
    prediction = rf_model.predict([input_data])[0]
    st.success(f"Predicted Traffic Density: {prediction:.2f}")

if __name__ == "__main__":
    main()

!streamlit run smart_traffic.py --server.port 8501 --server.enableCORS false --server.enableXsrfProtection false &>/dev/null &

from pyngrok import ngrok
public_url = ngrok.connect(8501, "http")
print("🌍 Access the Streamlit App Here:", public_url)

